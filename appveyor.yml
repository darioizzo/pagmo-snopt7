environment:
  TWINE_PASSWORD:
    secure: fqy2DKVE2zM+97vNPB8xgw3ae3SDPkL/T8RvC6s4ncY=
  matrix:
    - BUILD_TYPE: "MSVC_64_Debug"
      COMPILER: MSVC15
      PLATFORM: "x64"
    - BUILD_TYPE: "MSVC_64_Python37"
      COMPILER: MSVC15
      PLATFORM: "x64"
  global:
    PLATFORMTOOLSET: "v140"

install:
- if [%BUILD_TYPE%]==[MSVC_64_Debug] set PATH=C:\Miniconda36-x64\Scripts;%PATH%
- if [%BUILD_TYPE%]==[MSVC_64_Debug] conda config --add channels conda-forge --force
- if [%BUILD_TYPE%]==[MSVC_64_Debug] conda update --all -y
- if [%BUILD_TYPE%]==[MSVC_64_Debug] conda create -y --name ppnf python=3.7 pagmo-devel pybind11
# NOTE: need to use "call" because otherwise it won't work within an if block.
- if [%BUILD_TYPE%]==[MSVC_64_Debug] call activate ppnf

- if [%BUILD_TYPE%]==[MSVC_64_Python37] call "C:\\Miniconda37-x64\\Scripts\\activate.bat"
- if [%BUILD_TYPE%]==[MSVC_64_Python37] conda config --add channels conda-forge --force
- if [%BUILD_TYPE%]==[MSVC_64_Python37] conda update --all -y
- if [%BUILD_TYPE%]==[MSVC_64_Python37] conda create -y --name ppnf python=3.7 cmake pagmo-devel pygmo pybind11
- if [%BUILD_TYPE%]==[MSVC_64_Python37] call activate ppnf

build_script:
- if [%BUILD_TYPE%]==[MSVC_64_Debug] mkdir build
- if [%BUILD_TYPE%]==[MSVC_64_Debug] cd build
- if [%BUILD_TYPE%]==[MSVC_64_Debug] cmake -G "Visual Studio 15 2017 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library -DPPNF_BUILD_CPP=YES -DPPNF_BUILD_PYTHON=NO -DPPNF_BUILD_TESTS=YES ..
- if [%BUILD_TYPE%]==[MSVC_64_Debug] cmake --build . --config Release --target install
- if [%BUILD_TYPE%]==[MSVC_64_Debug] cp tests\Release\snopt7_c.dll tests\
- if [%BUILD_TYPE%]==[MSVC_64_Debug] cp tests\Release\worhp_c.dll tests\

- if [%BUILD_TYPE%]==[MSVC_64_Python37] mkdir build_pagmo_plugins_nonfree
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd build_pagmo_plugins_nonfree
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake -G "Visual Studio 15 2017 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library -DPPNF_BUILD_CPP=YES -DPPNF_BUILD_PYTHON=NO -DPPNF_BUILD_TESTS=YES ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake --build . --config Release --target install
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] mkdir build_pygmo_plugins_nonfree
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd build_pygmo_plugins_nonfree
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake -G "Visual Studio 15 2017 Win64" -DBoost_NO_BOOST_CMAKE=ON -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%/Library -DPPNF_BUILD_CPP=NO -DPPNF_BUILD_PYTHON=YES -DPPNF_BUILD_TESTS=NO ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cmake --build . --config Release --target install

test_script:
- if [%BUILD_TYPE%]==[MSVC_64_Debug] ctest --output-on-failure

- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd ..
- if [%BUILD_TYPE%]==[MSVC_64_Python37] cd tools
- if [%BUILD_TYPE%]==[MSVC_64_Python37] python -c "import pygmo_plugins_nonfree; pygmo_plugins_nonfree.test.run_test_suite(1)"

artifacts:
  - path: build\wheel\dist
    name: wheels

notifications:
  - provider: Webhook
    url: https://webhooks.gitter.im/e/1a3742192bd3f7e6d8e2

# Enable this to be able to login to the build worker. You can use the
# `remmina` program in Ubuntu, use the login information that the line below
# prints into the log.
# on_finish:
# - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
